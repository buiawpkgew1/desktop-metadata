name: Make Release

on:
  workflow_dispatch:
    inputs:
      ci-build-number:
        description: 'CI Build Number (optional)'
        required: false
        default: ''

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Metadata Repo
      uses: actions/checkout@v4

    - name: Get Latest Successful CI Build
      if: ${{ github.event.inputs.ci-build-number == '' }}
      uses: actions/github-script@v7
      id: get-latest-build
      with:
        script: |
          const { data } = await github.rest.actions.listWorkflowRunsForRepo({
            owner: 'zetaloop',
            repo: 'desktop',
            workflow_id: 'ci.yml',
            status: 'success',
            per_page: 1
          });
          if (!data.workflow_runs.length) {
            core.setFailed('No successful workflow runs found');
            return;
          }
          console.log(`Found successful run desktop/actions/runs/${data.workflow_runs[0].id}`);
          core.setOutput('ci-build-id', data.workflow_runs[0].id);

    - name: Download Artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          const { promisify } = require('util');
          const writeFile = promisify(fs.writeFile);
          const runId = process.env.CI_BUILD_NUMBER || '${{ steps.get-latest-build.outputs.ci-build-id }}';
          if (!runId) {
            throw new Error('No CI build number provided or found.');
          }
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: 'zetaloop',
            repo: 'desktop',
            run_id: runId,
          });
          fs.mkdirSync('./tmp', { recursive: true });
          for (const artifact of artifacts.data.artifacts) {
            const download = await github.rest.actions.downloadArtifact({
              owner: 'zetaloop',
              repo: 'desktop',
              artifact_id: artifact.id,
              archive_format: 'zip',
            });
            const filePath = path.join('./tmp', `${artifact.name}.zip`);
            await writeFile(filePath, Buffer.from(download.data));
            console.log(`Downloaded ${artifact.name} to ${filePath}`);
          }
      env:
        CI_BUILD_NUMBER: ${{ github.event.inputs.ci-build-number }}

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Run Python Script
      run: python update.py

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        repo: 'desktop'
        tag: release-${{ env.DESKTOP_VERSION }}
        name: Github Desktop ${{ env.DESKTOP_VERSION }}
        bodyFile: './tmp/release_body.txt'
        draft: false
        prerelease: ${{ env.IS_PRERELEASE == 'true' }}
        artifacts: './tmp/release/*'
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Push Metadata Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ./metadata
        git commit -m "Update metadata from CI #${{ github.event.inputs.ci-build-number || steps.get-latest-build.outputs.result }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
